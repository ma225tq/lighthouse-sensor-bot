version: '3.8'
name: lighthouse
services:
  
  postgres:
    image: postgres:latest
    container_name: postgres-container-lighthouse
    restart: always
    networks:
      - lighthouse
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ${POSTGRES_DATA_PATH}:/var/lib/postgresql/data
      - ./backend/postgres/init/db_schemas.sql:/docker-entrypoint-initdb.d/db_schemas.sql
      - ./backend/postgres/init/01-init-db.sh:/docker-entrypoint-initdb.d/01-init-db.sh
      - ./backend/postgres/init/insert_models.sql:/docker-entrypoint-initdb.d/insert_models.sql
      
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin-container-lighthouse
    restart: always
    networks:
      - lighthouse
    ports:
      - "8081:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      MAX_LOGIN_ATTEMPTS: 0
    depends_on:
      - postgres
    volumes:
      - ${PGADMIN_DATA_PATH}:/var/lib/pgadmin

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
          - 5000:5000
    networks:
      - lighthouse
    environment:
      - FRONTEND_URL=${FRONTEND_URL}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_PORT=${DB_PORT}
      - SERVER_URL=${SERVER_URL}
    depends_on:
      - postgres

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"  
    networks:
      - lighthouse
    environment:
      - DEV_MODE=true
      - NEXT_PUBLIC_SERVER_URL=${NEXT_PUBLIC_SERVER_URL}
    depends_on:
      - backend

networks:
  lighthouse:
    driver: bridge
